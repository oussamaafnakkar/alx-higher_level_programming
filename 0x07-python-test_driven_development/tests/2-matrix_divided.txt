``matrix`` module
======================

Using ``matrix_divided``
-------------------
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
    1) matrix empty
    >>> matrix_divided([], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    2) matrix with empty lists
    >>> matrix_divided([[]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    3) matrix with only one list  with divider
    >>> matrix_divided([[1,2,3]], 3)
    [[0.33, 0.67, 1.0]]

    4) matrix with divider 
    >>> matrix_divided([[1,2,3],[4,5,6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    5) matrix of strings
    >>> matrix_divided([["1","2","3"],["4","5","6"]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    6) matrix with a 0 divider
    >>> matrix_divided([[1,2,3],[4,5,6]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    7) matrix with strings
    >>> matrix_divided(["hello", "holberton"], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    8) matrix with a string inside a list
    >>> matrix_divided([1,2,3],[4,5,"6"])
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats



    


